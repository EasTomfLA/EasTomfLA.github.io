<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Android 8.1.0编译</title>
    <url>/2022/07/27/Android-8-1-0%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<blockquote>
<p>Ubuntu22.04<br>AOSP810r1<br><a href="https://www.anquanke.com/post/id/199898">2020年安卓源码编译指南及FART脱壳机谷歌全设备镜像发布</a></p>
</blockquote>
<h1 id="前置环境"><a href="#前置环境" class="headerlink" title="前置环境"></a>前置环境</h1><p>安装python2并设置为默认</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># apt update</span><br><span class="line"># git config --global user.email &quot;you@example.com&quot;</span><br><span class="line"># git config --global user.name &quot;Your Name&quot;</span><br><span class="line"># apt install bison tree</span><br><span class="line"># dpkg --add-architecture i386</span><br><span class="line"># apt update</span><br><span class="line"># apt install libc6:i386 libncurses5:i386 libstdc++6:i386</span><br><span class="line"># apt install libxml2-utils</span><br><span class="line"></span><br><span class="line"># apt install openjdk-8-jdk</span><br></pre></td></tr></table></figure>

<h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd aosppath</span><br><span class="line">source build/envsetup.sh</span><br><span class="line">lunch</span><br><span class="line">make -j8</span><br></pre></td></tr></table></figure>


<h1 id="遇到编译环境问题"><a href="#遇到编译环境问题" class="headerlink" title="遇到编译环境问题"></a>遇到编译环境问题</h1><h2 id="libncurses-so-5找不到"><a href="#libncurses-so-5找不到" class="headerlink" title="libncurses.so.5找不到"></a><a href="https://askubuntu.com/questions/1252062/how-to-install-libncurses-so-5-in-ubuntu-20-04">libncurses.so.5找不到</a></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository universe</span><br><span class="line">sudo apt-get install libncurses5 libncurses5:i386</span><br></pre></td></tr></table></figure>

<h2 id="Jack-Server-SSL-error"><a href="#Jack-Server-SSL-error" class="headerlink" title="Jack Server SSL error"></a>Jack Server SSL error</h2><blockquote>
<p><a href="https://blog.csdn.net/yanhongfei268/article/details/116308082">jack编译突然无法编译的问题</a><br><a href="https://blog.csdn.net/qq_37858386/article/details/119599118">Android编译错误 Jack server failed to ,SSL error when connecting to the Jack server. Try ‘jack-diagnose‘</a><br><a href="https://icode.best/i/51515431726799">坑了几天的jack-server-爱代码爱编程</a></p>
</blockquote>
<p>类似这样的错误</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ 10% 538/4980] Ensuring Jack server is installed and started</span><br><span class="line">FAILED: setup-jack-server </span><br><span class="line">/bin/bash -c &quot;(prebuilts/sdk/tools/jack-admin install-server prebuilts/sdk/tools/jack-launcher.jar prebuilts/sdk/tools/jack-server-4.11.ALPHA.jar  2&gt;&amp;1 || (exit 0) ) &amp;&amp; (JACK_SERVER_VM_ARGUMENTS=\&quot;-Dfile.encoding=UTF-8 -XX:+TieredCompilation\&quot; prebuilts/sdk/tools/jack-admin start-server 2&gt;&amp;1 || exit 0 ) &amp;&amp; (prebuilts/sdk/tools/jack-admin update server prebuilts/sdk/tools/jack-server-4.11.ALPHA.jar 4.11.ALPHA 2&gt;&amp;1 || exit 0 ) &amp;&amp; (prebuilts/sdk/tools/jack-admin update jack prebuilts/sdk/tools/jacks/jack-4.32.CANDIDATE.jar 4.32.CANDIDATE || exit 47 )&quot;</span><br><span class="line">Jack server already installed in &quot;/home/user/.jack-server&quot;</span><br><span class="line">Communication error with Jack server (35), try &#x27;jack-diagnose&#x27; or see Jack server log</span><br><span class="line">SSL error when connecting to the Jack server. Try &#x27;jack-diagnose&#x27;</span><br><span class="line">SSL error when connecting to the Jack server. Try &#x27;jack-diagnose&#x27;</span><br><span class="line">[ 10% 541/4980] build out/target/product/rk3399_mid/obj/ETC/precompiled_sepolicy_intermediates/precompiled_sepolicy</span><br><span class="line">ninja: build stopped: subcommand failed.</span><br><span class="line">22:32:18 ninja failed with: exit status 1</span><br><span class="line"></span><br><span class="line">#### failed to build some targets (01:11 (mm:ss)) ####</span><br><span class="line"></span><br><span class="line">Build android failed!</span><br></pre></td></tr></table></figure>
<p>原因就是编译时用的是open-jdk 8u292，默认禁用了TLSv1, TLSv1.1，<br>从&#x2F;etc&#x2F;java-8-openjdk&#x2F;security&#x2F;java.security中取消TLSv1, TLSv1.1 禁用，<br>修改前</p>
<p><img src="/images/pasted-5.png" alt="upload successful"><br>修改后:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jdk.tls.disabledAlgorithms=SSLv3, RC4, DES, MD5withRSA, \</span><br><span class="line">    DH keySize &lt; 1024, EC keySize &lt; 224, 3DES_EDE_CBC, anon, NULL, \</span><br><span class="line">    include jdk.disabled.namedCurves</span><br></pre></td></tr></table></figure>
<p>aosp&#x2F;prebuilts&#x2F;sdk&#x2F;tools&#x2F; 目录下执行.&#x2F;jack-admin kill-server &amp;&amp; .&#x2F;jack-admin start-server 成功。</p>
<h2 id="cnt-lt-sizeof-nl-value-type-LC-TIME-x2F-sizeof-nl-value-type-LC-TIME-0-’-failed"><a href="#cnt-lt-sizeof-nl-value-type-LC-TIME-x2F-sizeof-nl-value-type-LC-TIME-0-’-failed" class="headerlink" title="cnt &lt; (sizeof (_nl_value_type_LC_TIME) &#x2F; sizeof (_nl_value_type_LC_TIME[0]))’ failed."></a><a href="https://blog.csdn.net/DKBDKBDKB/article/details/98611769">cnt &lt; (sizeof (_nl_value_type_LC_TIME) &#x2F; sizeof (_nl_value_type_LC_TIME[0]))’ failed.</a></h2><p>报错如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flex-2.5.39: loadlocale.c:130:_nl_intern_locale_data: ?? &#x27;cnt &lt; (sizeof (_nl_value_type_LC_TIME) / sizeof (_nl_value_type_LC_TIME[0]))&#x27; ???</span><br><span class="line">Aborted (core dumped)</span><br><span class="line">[ 4% 4832/99272] target C++: libapplypatch &lt;= bootable/recovery/applypatch/bspatch.cpp</span><br></pre></td></tr></table></figure>
<p>解决方法：<br>在～&#x2F;.bashrc最后添加export LC_ALL&#x3D;C<br>如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">108 # enable programmable completion features (you don&#x27;t need to enable</span><br><span class="line">109 # this, if it&#x27;s already enabled in /etc/bash.bashrc and /etc/profile</span><br><span class="line">110 # sources /etc/bash.bashrc).</span><br><span class="line">111 if ! shopt -oq posix; then</span><br><span class="line">112   if [ -f /usr/share/bash-completion/bash_completion ]; then</span><br><span class="line">113     . /usr/share/bash-completion/bash_completion</span><br><span class="line">114   elif [ -f /etc/bash_completion ]; then</span><br><span class="line">115     . /etc/bash_completion</span><br><span class="line">116   fi</span><br><span class="line">117 fi</span><br><span class="line">118</span><br><span class="line">119 export LC_ALL=C</span><br></pre></td></tr></table></figure>
<p>然后执行<code>source ~/.bashrc</code><br>重新编译即可。</p>
]]></content>
  </entry>
  <entry>
    <title>Android prop属性</title>
    <url>/2022/05/30/Android-prop%E5%B1%9E%E6%80%A7/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/love_xsq/article/details/50453905">android getprop指令获得系统信息</a></p>
]]></content>
  </entry>
  <entry>
    <title>Android查看端口占用</title>
    <url>/2022/05/27/Android%E6%9F%A5%E7%9C%8B%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/</url>
    <content><![CDATA[<p>[Android根据本地端口号寻找对应的用户UID和进程PID]<br>(<a href="https://blog.csdn.net/u013107656/article/details/74925736">https://blog.csdn.net/u013107656/article/details/74925736</a>)<br><code>netstat -an | grep &quot;171008&quot;</code></p>
]]></content>
  </entry>
  <entry>
    <title>Android缓冲区大小</title>
    <url>/2022/05/18/Android%E7%BC%93%E5%86%B2%E5%8C%BA%E5%A4%A7%E5%B0%8F/</url>
    <content><![CDATA[<blockquote>
<p><a href="https://pspdfkit.com/blog/2018/how-to-increase-the-logcat-buffer-size/">How to Increase the Logcat Buffer Size</a></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">adb logcat -g</span><br><span class="line">adb logcat -G 1M</span><br><span class="line">adb logcat -b main -G 16M</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Git常用命令</title>
    <url>/2022/05/24/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="查看远程分支提交"><a href="#查看远程分支提交" class="headerlink" title="查看远程分支提交"></a>查看远程分支提交</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看分支</span><br><span class="line">D:\WorkSpace\script\python&gt;git branch -a </span><br><span class="line">* master</span><br><span class="line">  remotes/origin/master</span><br><span class="line">  </span><br><span class="line"># 查看具体分支情况</span><br><span class="line">git log origin/master</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a><a href="https://blog.csdn.net/rubulai/article/details/84307657">版本回退</a></h1><p>一、历史记录查看<br> 1、查看提交的历史记录：git log，展示的信息比较全面</p>
<p> 2、使一次记录的提交日志展示在一行：git log –pretty&#x3D;oneline</p>
<p> 或者：git log –oneline，只能显示当前指针所在版本及其之前的版本记录</p>
<p> 或者：git reflog，这里展示的每次提交时的指针位置，对于我们的版本回退很有帮助，其中的数字表示指针需要移动几次会回到指定版本</p>
<p>二、版本重置(三种方式)</p>
<p> 1、基于索引值操作[推荐]：可前进和后退<br>  命令：git reset –hard 索引值(reflog中的索引值即可)</p>
<p> 2、使用^符号：只能后退，几个代表后退几步，移动的是当前指针HEAD的位置</p>
<p> 3、使用~符号：只能后退，后退的步数可以指定，比使用^更便捷</p>
]]></content>
  </entry>
  <entry>
    <title>IDA python</title>
    <url>/2022/06/17/IDA-python/</url>
    <content><![CDATA[<p><a href="https://x3h1n.github.io/2020/06/16/IDA-Python%E6%95%B4%E7%90%86/">IDA Python API整理</a><br><a href="https://www.yunyawu.com/2020/03/31/ida%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B%EF%BC%9Aida%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/">IDA系列教程：IDA使用方法</a><br><a href="https://bbs.pediy.com/thread-170272.htm">实战IDA脚本编程–用idc实现JumpNotFunction</a><br><a href="https://blog.csdn.net/rzwinters/article/details/79897228">IDA 7.0 python &#x2F; idc.py</a><br><a href="https://github.com/williballenthin/idawilli/blob/master/scripts/yara_fn/yara_fn.py">idawilli&#x2F;scripts&#x2F;yara_fn&#x2F;yara_fn.py </a><br><a href="https://leeyuxun.github.io/IDA%E5%9F%BA%E7%A1%80%E5%8A%9F%E8%83%BD%E6%80%BB%E7%BB%93.html">IDA基础功能总结</a><br><a href="https://psyduck0409.github.io/2021/03/01/2021/idapython%E7%AC%94%E8%AE%B0/">idapython笔记</a><br><a href="https://www.hex-rays.com/products/ida/support/ida74_idapython_no_bc695_porting_guide.shtml">Porting from IDAPython 6.x-7.3, to 7.4</a><br><a href="https://d1nn3r.github.io/2019/06/10/IDAPython/">IDAPython常用函数</a><br><a href="https://bbs.pediy.com/thread-225920.htm">[翻译]IDAPython-Book（Alexander Hanel）</a><br><a href="https://www.cnblogs.com/DirWang/articles/12306976.html">IDAPython 教程1</a><br><a href="https://www.hex-rays.com/products/ida/support/idapython_docs/ida_idaapi.html#ida_idaapi.BADADDR">Module ida_idaapi</a><br>[IDA Pro 脚本系统(idc idaPython)帮助文档索引)(<a href="https://blog.csdn.net/lacoucou/article/details/79349677">https://blog.csdn.net/lacoucou/article/details/79349677</a>)<br><a href="https://magic-king.net/posts/ida-script/">IDA-Script</a><br><a href="https://hex-rays.com/products/ida/support/ida74_idapython_no_bc695_porting_guide.shtml">IDA python 官方文档</a></p>
]]></content>
  </entry>
  <entry>
    <title>Linux查看文件、文件夹大小</title>
    <url>/2022/06/09/Linux%E6%9F%A5%E7%9C%8B%E6%96%87%E4%BB%B6%E3%80%81%E6%96%87%E4%BB%B6%E5%A4%B9%E5%A4%A7%E5%B0%8F/</url>
    <content><![CDATA[<p>df -h</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sailfish:/ $ <span class="built_in">df</span> -h</span><br><span class="line">Filesystem                      Size  Used Avail Use% Mounted on</span><br><span class="line">tmpfs                           1.8G  4.0M  1.8G   1% /sbin</span><br><span class="line">tmpfs                           1.8G  528K  1.8G   1% /dev</span><br><span class="line">/dev/block/dm-0                 270M  227M   34M  87% /vendor</span><br><span class="line">/dev/block/sdd3                  27M  552K   26M   3% /persist</span><br><span class="line">tmpfs                           1.8G     0  1.8G   0% /mnt</span><br><span class="line">/dev/block/sda25                 64M   56M  8.0M  88% /firmware/radio</span><br><span class="line">/dev/block/sda35                 24G   20G  3.1G  87% /data</span><br><span class="line">tmpfs                           1.8G     0  1.8G   0% /system/xbin</span><br><span class="line">/sbin/.magisk/block/system_root 1.9G  934M  982M  49% /system/xbin/anrd</span><br><span class="line">/data/media                      24G   20G  3.1G  87% /storage/emulated</span><br></pre></td></tr></table></figure>

<p>du -sh path 查看path下的总大小</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sailfish:/ $ <span class="built_in">du</span> -sh /sdcard/</span><br><span class="line">14G     /sdcard/</span><br></pre></td></tr></table></figure>

<p>du -h Cmax-depth&#x3D;1 * | sort -n &gt; &#x2F;sdcard&#x2F;du-h.log</p>
]]></content>
  </entry>
  <entry>
    <title>MacOS pyenv安装</title>
    <url>/2022/04/29/MacOS-pyenv%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<blockquote>
<p>基本环境<br>iterm2+zsh+homebrew</p>
</blockquote>
<h2 id="安装前置环境"><a href="#安装前置环境" class="headerlink" title="安装前置环境"></a>安装前置环境</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install openssl readline sqlite3 xz zlib</span><br></pre></td></tr></table></figure>

<h2 id="安装pyenv"><a href="#安装pyenv" class="headerlink" title="安装pyenv"></a>安装pyenv</h2><p>通过homebrew安装pyenv</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew update</span><br><span class="line">brew install pyenv</span><br></pre></td></tr></table></figure>

<h2 id="增加配置到-x2F-zshrc"><a href="#增加配置到-x2F-zshrc" class="headerlink" title="增加配置到~&#x2F;.zshrc"></a>增加配置到~&#x2F;.zshrc</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export PYENV_ROOT=&quot;$HOME/.pyenv&quot;</span><br><span class="line">export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;</span><br><span class="line">eval &quot;$(pyenv init --path)&quot;</span><br><span class="line">eval &quot;$(pyenv init -)&quot;</span><br></pre></td></tr></table></figure>

<h2 id="安装frida"><a href="#安装frida" class="headerlink" title="安装frida"></a>安装frida</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install frida==15.1.17</span><br><span class="line">pip install frida-tools==10.5.4</span><br><span class="line">pip install objection==1.11.0</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>MarkDown语法</title>
    <url>/2022/07/04/MarkDown%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<p><a href="https://markdown.com.cn/extended-syntax/tables.html">Markdown 官方教程</a><br><a href="https://blog.csdn.net/heimu24/article/details/81189700">Markdown进阶（更改字体、颜色、大小，设置文字背景色，调整图片大小设置居中）</a><br><a href="https://www.runoob.com/markdown/md-paragraph.html">Markdown 段落</a></p>
<p><code>&lt;font color=red&gt;我是红色&lt;/font&gt;</code> <font color=red>我是红色</font><br><code>**我是粗体**</code> <strong>我是粗体</strong><br><code>~~我是下划线~~</code> <del>我是删除线</del><br><code>回车开始&lt;br&gt;回车结束  </code> 回车开始<br>回车结束  </p>
]]></content>
  </entry>
  <entry>
    <title>MarkDown预览</title>
    <url>/2022/07/15/MarkDown%E9%A2%84%E8%A7%88/</url>
    <content><![CDATA[<h1 id="sublime"><a href="#sublime" class="headerlink" title="sublime"></a><a href="https://blog.csdn.net/Jin_Kwok/article/details/104350548">sublime</a></h1><p>安装 MarkdownPreview<br>ctrl+shilf+p 选择 preview</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">组合键 Ctrl+Shift+P 调出命令面板</span><br><span class="line">输入mdp找到并选中Markdown Preview： Preview in Browser</span><br><span class="line">出现两个选项：github和markdown。任选其一即可，github是利用GitHub的在线API来解析.md文件，支持在线资源的预览，如在线图片它的解析速度取决于你的联网速度。该方式据说一天只能打开60次。markdown就是传统的本地打开，不支持在线资源的预览。</span><br><span class="line">默认浏览器中显示预览结果</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Mi8 scrcpy能显示不能点击控制</title>
    <url>/2022/06/09/Mi8-scrcpy%E8%83%BD%E6%98%BE%E7%A4%BA%E4%B8%8D%E8%83%BD%E7%82%B9%E5%87%BB%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<blockquote>
<p><a href="https://blog.csdn.net/L_fly_J/article/details/119913207">scrcpy能显示不能控制</a></p>
</blockquote>
<p>小米手机USB中有安全模式，要调试为允许才可以进行模拟操作<br><img src="/images/pasted-1.png" alt="upload successful"></p>
]]></content>
  </entry>
  <entry>
    <title>Sublime Text 快捷键</title>
    <url>/2022/06/13/Sublime-Text-%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctrl+shelf+p 	//package control</span><br><span class="line">alt+f3 			//快速全选</span><br></pre></td></tr></table></figure>

<h2 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctrl+com+g //快速全选</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Ubuntu系统python版本切换</title>
    <url>/2022/07/26/Ubuntu%E7%B3%BB%E7%BB%9Fpython%E7%89%88%E6%9C%AC%E5%88%87%E6%8D%A2/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/My_CSDN_IT/article/details/114323834">在 Ubuntu20.04 上安装 python2 并设置为默认方式</a></p>
<h1 id="1-安装-Python2"><a href="#1-安装-Python2" class="headerlink" title="1. 安装 Python2"></a>1. 安装 Python2</h1><p>可以到 Python 官网去下载安装包进行安装，也可以直接使用如下命令安装 Python2：</p>
<p><code>$ sudo apt install python2</code><br>安装完成后检查 Python 的版本，在这里我安装的 Python版本为 2.7.18：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ python2 -V</span><br><span class="line">Python 2.7.18</span><br></pre></td></tr></table></figure>
<p>一般 Ubuntu 是自带 python3 版本的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ python3 -V</span><br><span class="line">Python 3.8.5</span><br></pre></td></tr></table></figure>
<p>安装完成后我们可以使用如下命令来检查目前可用的 Python 版本：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ls /usr/bin/python*</span><br></pre></td></tr></table></figure>

<p>可以看到，我可用的 Python 版本有如上几个…</p>
<h1 id="2-设置默认方式-替代版本"><a href="#2-设置默认方式-替代版本" class="headerlink" title="2. 设置默认方式(替代版本)"></a>2. 设置默认方式(替代版本)</h1><p>首先查看是否已经配置了 Python 的默认方式(替代版本)：</p>
<p><code>$ sudo update-alternatives --list python</code></p>
<p>若没有设置，会显示：</p>
<p><code>update-alternatives: error: no alternatives for python</code></p>
<p>若设置了，则是显示你替代的版本，可以以此确认你的备选方案是否可用：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo update-alternatives --list python</span><br><span class="line">/usr/bin/python2</span><br><span class="line">/usr/bin/python3</span><br></pre></td></tr></table></figure>
<p>然后使用如下命令设置默认方式(替代版本)：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 </span><br><span class="line">$ sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 </span><br></pre></td></tr></table></figure>
<p>选用可选的 Python 版本：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo update-alternatives --config python</span><br><span class="line">There are 2 choices for the alternative python (providing /usr/bin/python).</span><br><span class="line">  Selection    Path              Priority   Status</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">* 0            /usr/bin/python3   2         auto mode</span><br><span class="line">  1            /usr/bin/python2   1         manual mode</span><br><span class="line">  2            /usr/bin/python3   2         manual mode</span><br><span class="line">Press  to keep the current choice[*], or type selection number: 1</span><br></pre></td></tr></table></figure>
<p>在本例中，选择 1 来选择 Python2…</p>
<p>最后，你可以检查你的 Python 版本来确认是否设置成功：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ python -V</span><br><span class="line">Python 2.7.18</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Vim使用技巧</title>
    <url>/2022/06/22/Vim%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>查找当前单词<br>在 normal 模式下按下 * 即可查找光标所在单词（word）， 要求每次出现的前后为空白字符或标点符号。例如当前为 foo， 可以匹配 foo bar 中的 foo，但不可匹配 foobar 中的 foo。 这在查找函数名、变量名时非常有用。</p>
<p>按下 g* 即可查找光标所在单词的字符序列，每次出现前后字符无要求。 即 foo bar 和 foobar 中的 foo 均可被匹配到。</p>
<p><a href="https://harttle.land/2016/08/08/vim-search-in-file.html">在 Vim 中优雅地查找和替换</a></p>
]]></content>
  </entry>
  <entry>
    <title>Windows Sublime Text JSON格式化</title>
    <url>/2022/06/06/Windows-Sublime-Text-JSON%E6%A0%BC%E5%BC%8F%E5%8C%96/</url>
    <content><![CDATA[<blockquote>
<p><a href="https://blog.csdn.net/u012842688/article/details/121564821">sublime-text（格式化JSON数据）</a><br><a href="https://www.php.cn/tool/sublime/453364.html#:~:text=%E8%8F%9C%E5%8D%95%2FSublime%20Text-%3EPreferences-%3EPackage%20Control%EF%BC%8C%E9%80%89%E6%8B%A9Package%20Control%3AInstall%20Package%EF%BC%8C%E8%BE%93%E5%85%A5%20Pretty%20JSON%20%EF%BC%8C%E6%8C%89%E4%B8%8B%E5%9B%9E%E8%BD%A6%E5%AE%8C%E6%88%90%E5%AE%89%E8%A3%9D%EF%BC%8C%E6%9C%80%E5%90%8E%E9%87%8D%E5%90%AF%E3%80%82,windows%20%3A%20ctrl%20%2B%20alt%20%2B%20j%20%E7%BB%84%E5%90%88%E9%94%AE%E6%A0%BC%E5%BC%8F%E5%8C%96json%E5%AD%97%E7%AC%A6%E4%B8%B2">Sublime Text3和JSON解析插件安装方法介绍</a></p>
</blockquote>
<p>JSON插件</p>
<p>在线插件安装Package Control<br>按Ctrl+ &#96;(此符号为tab按键上面的按键) 调出console（注：避免热键冲突）<br>粘贴以下代码到命令行并回车，完成后重启：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import urllib.request,os; pf = &#x27;Package Control.sublime-package&#x27;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &#x27;wb&#x27;).write(urllib.request.urlopen( &#x27;http://sublime.wbond.net/&#x27; + pf.replace(&#x27; &#x27;,&#x27;%20&#x27;)).read())</span><br></pre></td></tr></table></figure>

<p>安装Pretty JSON<br>菜单&#x2F;Sublime Text-&gt;Preferences-&gt;Package Control，选择Package Control:Install Package，输入Pretty JSON，按下回车完成安裝，最后重启。</p>
<p>使用：<br><del>windows : ctrl + alt + j 组合键格式化json字符串</del><br>Mac : ctrl + command +j 组合键格式化json字符串</p>
<p>选中要格式化的数据源，输入format，选择Format JSON格式化数据</p>
]]></content>
  </entry>
  <entry>
    <title>Windows常用命令</title>
    <url>/2022/06/27/Windows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>删除目录<br>rmdir &#x2F;s path1</p>
]]></content>
  </entry>
  <entry>
    <title>Windows欧陆词典</title>
    <url>/2022/06/09/Windows%E6%AC%A7%E9%99%86%E8%AF%8D%E5%85%B8/</url>
    <content><![CDATA[<p><a href="https://foxirj.com/download-2?post=1452">https://foxirj.com/download-2?post=1452</a><br><a href="https://www.pdawiki.com/forum/thread-41281-1-1.html">https://www.pdawiki.com/forum/thread-41281-1-1.html</a><br>欧路词典PC版破解方法，实测可用<br>注：法语助手与欧路词典，其实是同一个软件，只不过披上了不同的外衣。以下方法同样适用于法语助手crack。</p>
<p>一、电脑版破解方法<br>步骤一，修改次数：<br>（1）打开注册表（win+R），输入：regedit<br>（2）找到HKEY_CURRENT_USER\Software\Francophonie\Frhelper\Customer Info<br>（3）里面有一个名为“TimesLeft3”的(32-位)DWORD值，<br>TimesLeft3显示法语助手软件剩下的使用次数。<br>使用次数：每退出软件一次算使用了一次。每使用一次，TimesLeft3的值就会减1<br>（4）要法语助手无限次使用，有两种方法：<br>1、打开(32-位)DWORD值“TimesLeft3”，点到十进制，输入10000，这样就可以用10000次，次数你随便改。<br>2、删除这个(32-位)DWORD值“TimesLeft3”，新建一个字符串值S，名字还是“TimesLeft3”。法语助手软件只能修改(32-位)DWORD值而不能修改字符串值，因此永远剩余50次。<br>步骤二，修改时间：<br>（5）法语助手除了有次数限制，还有时间限制：只能试用一个月。它的时间记录文件为C:\Users\用户名\AppData\Roaming\Francochinois\Frhelper下的study.db（这是win7下的路径，XP下也有相似的路径，这里不写了），只要将这个文件“直接删除”即可。另外，法语助手读取系统时间的，只要更改计算机时间，也能太到效果（但明显这个不实际。。）<br>二、手机版版破解方法<br>（1）只需一步，打开手机sdcard根目录，找到eudb_fr文件夹，设置显示隐藏文件（所有文件），删除里面隐藏的.study.dat，这样就OK了，很简单。<br>来自 <a href="https://blog.csdn.net/fy_hanxu/article/details/79052485">https://blog.csdn.net/fy_hanxu/article/details/79052485</a><br>三、注册表破解：权限设置法实战截图</p>
<p>20191204 注册表文件破解：<br>把以下代码存为.reg文件<br>WindowsRegistry Editor Version 5.00<br>[HKEY_CURRENT_USER\Software\Francophonie\Frhelper\CustomerInfo]<br>“SerialCode”&#x3D;”crackedby ercJuL  “<br>“TimesLeft3”&#x3D;dword:000c85e7<br>“regDate”&#x3D;”2018&#x2F;3&#x2F;700:00:00”<br>“LicenseCode”&#x3D;”crackedby ercJuL  “</p>
<ul>
<li>G’ I% _; r” C0 B&#x2F; x2 u( n<br>) a* w6 X9 I# d$ g6 p</li>
</ul>
<p>运行中输入 regedt32 或regedit 打开注册表<br>右击 需要查询的 项 或 键值所在的项<br>选择“权限”<br>点击想要了解的 用户名，看看是否存在“完全控制权限”<br>若是有，则拥有写权限，若是没有，可以再点击“高级”<br>点击选择需要了解的 用户名，并点击“编辑”<br>可以在此界面查看详细的权限，如是否拥有“设置数值”、“创建子项”、“写入DAC”、“写入所有者”等权限。</p>
]]></content>
  </entry>
  <entry>
    <title>Windows环境配置</title>
    <url>/2022/06/23/Windows%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/x2584179909/article/details/108319973">安装adb</a><br><a href="https://github.com/hluk/CopyQ">Copyq 剪切板管理</a><br><a href="https://github.com/microsoft/PowerToys/releases/tag/v0.59.1">PowerToy改键</a><br><a href="https://github.com/Genymobile/scrcpy">scrcpy</a><br><a href="https://github.com/microsoft/terminal/releases">terminal</a><br><a href="https://freecommander.com/en/downloads/">freecommander</a><br><a href="https://www.whg6.com/1587.html">submlime text 4</a><br><a href="https://github.com/PowerShell/PowerShell">PowerShell</a><br><a href="https://www.dhao2001.com/2021/12/06/enable-more-comfortable-auto-completion-for-powershell/">为 Powershell 启用更舒服的自动补全</a><br><a href="https://www.kwchang0831.dev/dev-env/pwsh/oh-my-posh">安裝新版 Oh My Posh 與插件來美化 PowerShell</a>  </p>
]]></content>
  </entry>
  <entry>
    <title>Windows计算md5</title>
    <url>/2022/06/22/Windows%E8%AE%A1%E7%AE%97md5/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/xibeichengf/article/details/48750315">Windows下查看文件MD5值</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">certutil -hashfile filename MD5</span><br><span class="line">certutil -hashfile filename SHA1</span><br><span class="line">certutil -hashfile filename SHA256</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>adb shell 截屏与录屏</title>
    <url>/2022/06/22/adb-shell-%E6%88%AA%E5%B1%8F%E4%B8%8E%E5%BD%95%E5%B1%8F/</url>
    <content><![CDATA[<h1 id="adb-shell-截屏与录屏"><a href="#adb-shell-截屏与录屏" class="headerlink" title="adb shell 截屏与录屏"></a><a href="https://www.jianshu.com/p/9b9a0e2f89c5">adb shell 截屏与录屏</a></h1><h2 id="截屏"><a href="#截屏" class="headerlink" title="截屏"></a>截屏</h2><p><code>adb shell screencap -p /sdcard/screenhot.png</code></p>
<h2 id="截屏并保存在指定路径"><a href="#截屏并保存在指定路径" class="headerlink" title="截屏并保存在指定路径"></a>截屏并保存在指定路径</h2><p><code>adb exec-out screencap -p &gt; C:\Users\Administrator\Desktop\face\aaa.png</code></p>
<h2 id="录屏"><a href="#录屏" class="headerlink" title="录屏"></a>录屏</h2><h3 id="默认录制180s-3分钟的视频"><a href="#默认录制180s-3分钟的视频" class="headerlink" title="默认录制180s 3分钟的视频"></a>默认录制180s 3分钟的视频</h3><p><code>adb shell screenrecord /sdcard/video.mp4</code></p>
<h3 id="视频质量"><a href="#视频质量" class="headerlink" title="视频质量"></a>视频质量</h3><p><code>adb shell screenrecord --size 1280*720 /sdcard/video.mp4</code></p>
<p><code>adb shell screenrecord --time-limit 200 /sdcard/video.mp4</code></p>
<p><code>adb shell screenrecord --bit-rate 500000 /sdcard/video/mp4</code>    &#x2F;&#x2F;500kbps</p>
]]></content>
  </entry>
  <entry>
    <title>android12 frida高版本执行invalid address异常</title>
    <url>/2022/07/18/android12-frida%E9%AB%98%E7%89%88%E6%9C%AC%E6%89%A7%E8%A1%8Cinvalid-address%E5%BC%82%E5%B8%B8/</url>
    <content><![CDATA[<p>android 12 执行 frida15.1.17 执行错误<br><code>&quot;description&quot;:&quot;Error: invalid address&quot;</code><br>需要关闭enforce<br><code>adb shell setenforce 0</code></p>
]]></content>
  </entry>
  <entry>
    <title>frida执行无效地址</title>
    <url>/2022/05/27/frida%E6%89%A7%E8%A1%8C%E6%97%A0%E6%95%88%E5%9C%B0%E5%9D%80/</url>
    <content><![CDATA[<h2 id="frida执行在Android10版本提示-“Error-invalid-address”"><a href="#frida执行在Android10版本提示-“Error-invalid-address”" class="headerlink" title="frida执行在Android10版本提示 “Error: invalid address”"></a>frida执行在Android10版本提示 “Error: invalid address”</h2><p>将adbshell模式转为Permissivem模式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sailfish:/ # getenforce</span><br><span class="line">Enforcing</span><br><span class="line">sailfish:/ # setenforce 0</span><br><span class="line">sailfish:/ # getenforce</span><br><span class="line">Permissive</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>frida脚本代码提示</title>
    <url>/2022/05/17/frida%E8%84%9A%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%8F%90%E7%A4%BA/</url>
    <content><![CDATA[<h1 id="macos"><a href="#macos" class="headerlink" title="macos"></a>macos</h1><blockquote>
<p><a href="https://blog.csdn.net/airuozhaoyang/article/details/110789942">frida代码提示插件</a></p>
</blockquote>
<p>安装nodejs npm，然后通过npm安装frida-gum即可</p>
<p><code>npm install @types/frida-gum</code></p>
<h1 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 在哪个目录安装就在哪个目录生成node_modules</span><br><span class="line">npm install @types/frida-gum</span><br><span class="line"># code指定mode_modules下的路径就可以</span><br><span class="line">code &quot;D:\OpenSource\r0tracerPrivate\&quot; D:\WorkSpace\node_modules\@types\frida-gum\index.d.ts</span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="https://blog.csdn.net/qq_38851536/article/details/104895878">Frida开发环境搭建记录</a></p>
</blockquote>
<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><p>安装npm，其他步骤与window一致</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g npm</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>frida资料</title>
    <url>/2022/06/17/frida%E8%B5%84%E6%96%99/</url>
    <content><![CDATA[<p><a href="http://www.juziss.cn/2020/11/14/Frida%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/">Frida日常使用总结</a>  </p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/04/26/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>kali</title>
    <url>/2022/05/16/kali/</url>
    <content><![CDATA[<h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><h3 id="doublecmd"><a href="#doublecmd" class="headerlink" title="doublecmd"></a><a href="https://sourceforge.net/projects/doublecmd/">doublecmd</a></h3><h3 id="010editor"><a href="#010editor" class="headerlink" title="010editor"></a>010editor</h3><p><a href="https://www.52pojie.cn/thread-1178561-1-1.html">010editor 10.0.2 Linux版</a></p>
<h3 id="sublime"><a href="#sublime" class="headerlink" title="sublime"></a>sublime</h3><p><a href="https://blog.csdn.net/FishSeeker/article/details/90749001">破解sublime 3207(2019.6.3更新)</a></p>
<p>安装官方原版（此处是4126）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -</span><br><span class="line">sudo apt-get install apt-transport-https</span><br><span class="line">echo &quot;deb https://download.sublimetext.com/ apt/stable/&quot; | sudo tee /etc/apt/sources.list.d/sublime-text.list</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install sublime-text</span><br></pre></td></tr></table></figure>
<p>修改可执行文件<br>进入：<a href="https://hexed.it/">https://hexed.it/</a><br>点击“Open file”，然后选择“sublime_text”这个可执行文件（如果用apt装的应该在&#x2F;opt&#x2F;sublime_text 下）<br>选择右侧的“Search”，然后在“Search for”框输入“97 94 0D”，点击“Search Now”<br>下面就会出现一个搜索结果<br>然后点击搜索结果定位到那一行，把“97 94 0D”改成“00 00 00”<br>然后点选上方的”Export”再次输出成二进制文件<br>然后用这个修改过的文件替换原来文件夹里的那个sublime_text文件<br>输入sudo chmod 755 sublime_text ，否则会报什么权限错误。</p>
<p>修改hosts</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1 www.sublimetext.com</span><br><span class="line">127.0.0.1 sublimetext.com</span><br><span class="line">127.0.0.1 sublimehq.com</span><br><span class="line">127.0.0.1 telemetry.sublimehq.com</span><br><span class="line">127.0.0.1 license.sublimehq.com</span><br><span class="line">127.0.0.1 45.55.255.55</span><br><span class="line">127.0.0.1 45.55.41.223</span><br><span class="line">0.0.0.0 license.sublimehq.com</span><br><span class="line">0.0.0.0 45.55.255.55</span><br><span class="line">0.0.0.0 45.55.41.223</span><br></pre></td></tr></table></figure>
<p>把以上内容复制到&#x2F;etc&#x2F;hosts 的最后，为了防止sublime验证</p>
<p>注册</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">----- BEGIN LICENSE -----</span><br><span class="line">TwitterInc</span><br><span class="line">200 User License</span><br><span class="line">EA7E-890007</span><br><span class="line">1D77F72E 390CDD93 4DCBA022 FAF60790</span><br><span class="line">61AA12C0 A37081C5 D0316412 4584D136</span><br><span class="line">94D7F7D4 95BC8C1C 527DA828 560BB037</span><br><span class="line">D1EDDD8C AE7B379F 50C9D69D B35179EF</span><br><span class="line">2FE898C4 8E4277A8 555CE714 E1FB0E43</span><br><span class="line">D5D52613 C3D12E98 BC49967F 7652EED2</span><br><span class="line">9D2D2E61 67610860 6D338B72 5CF95C69</span><br><span class="line">E36B85CC 84991F19 7575D828 470A92AB</span><br><span class="line">------ END LICENSE ------</span><br></pre></td></tr></table></figure>

<p>这里大概随便的注册码都可以了，所以就复制上面的然后注册就好啦</p>
<h3 id="vscode"><a href="#vscode" class="headerlink" title="vscode"></a>vscode</h3><p><a href="https://www.jianshu.com/p/8fdd0e3b7339">linux系统下怎么安装.deb文件</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i file.deb（如果是red hat linux的rpm格式，用rpm -ivh file.rpm）</span><br></pre></td></tr></table></figure>

<h2 id="逆向工具安装"><a href="#逆向工具安装" class="headerlink" title="逆向工具安装"></a>逆向工具安装</h2><h3 id="apktool"><a href="#apktool" class="headerlink" title="apktool"></a>apktool</h3><p><code>sudo apt install apktool</code></p>
<h3 id="smali"><a href="#smali" class="headerlink" title="smali"></a>smali</h3><p><code>sudo apt install smali</code></p>
<h2 id="修改时区"><a href="#修改时区" class="headerlink" title="修改时区"></a>修改时区</h2><p>shell输入如下命令，选择Asia，再选好最终的时区就ok</p>
<p><code>dpkg-reconfigure tzdata</code></p>
<h2 id="pyenv"><a href="#pyenv" class="headerlink" title="pyenv"></a>pyenv</h2><h3 id="修改软件源"><a href="#修改软件源" class="headerlink" title="修改软件源"></a>修改软件源</h3><p><code>nano /etc/apt/sources.list</code></p>
<h3 id="注释掉原有的地址，添加ustc的地址"><a href="#注释掉原有的地址，添加ustc的地址" class="headerlink" title="注释掉原有的地址，添加ustc的地址"></a>注释掉原有的地址，添加ustc的地址</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deb https://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure>

<h3 id="apt-update遇到错误key错误问题的话"><a href="#apt-update遇到错误key错误问题的话" class="headerlink" title="apt update遇到错误key错误问题的话"></a>apt update遇到错误key错误问题的话</h3><p>错误信息”Updating from such a repository can’t be done securely, and is therefore disabled by default.”<br><code>wget -q -O - https://archive.kali.org/archive-key.asc | apt-key add</code></p>
<h3 id="继续更新"><a href="#继续更新" class="headerlink" title="继续更新"></a>继续更新</h3><p><code>apt update &amp;&amp; apt upgrade</code></p>
<h3 id="执行完成后，尝试安装pyenv依赖，去掉了python-openssl，不影响后面的过程-后面遇到了openssl的问题，可能与此有关，建议使用官方的依赖安装方式进行安装"><a href="#执行完成后，尝试安装pyenv依赖，去掉了python-openssl，不影响后面的过程-后面遇到了openssl的问题，可能与此有关，建议使用官方的依赖安装方式进行安装" class="headerlink" title="执行完成后，尝试安装pyenv依赖，去掉了python-openssl，不影响后面的过程,后面遇到了openssl的问题，可能与此有关，建议使用官方的依赖安装方式进行安装"></a>执行完成后，尝试安装pyenv依赖，去掉了python-openssl，<del>不影响后面的过程</del>,后面遇到了openssl的问题，可能与此有关，建议使用官方的依赖安装方式进行安装</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install -y build-essential libssl-dev zlib1g-dev libbz2-dev \</span><br><span class="line">libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \</span><br><span class="line">xz-utils tk-dev libffi-dev liblzma-dev git</span><br></pre></td></tr></table></figure>
<p>官方依赖安装如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update; sudo apt-get install make build-essential libssl-dev zlib1g-dev \</span><br><span class="line">libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \</span><br><span class="line">libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev</span><br></pre></td></tr></table></figure>

<h3 id="libgcc-9-dev问题-好像没有搞这个-这个时候并没有解决依赖问题，于是将libgcc-9-dev卸载（漫长等待）"><a href="#libgcc-9-dev问题-好像没有搞这个-这个时候并没有解决依赖问题，于是将libgcc-9-dev卸载（漫长等待）" class="headerlink" title="libgcc-9-dev问题 [好像没有搞这个]这个时候并没有解决依赖问题，于是将libgcc-9-dev卸载（漫长等待）"></a>libgcc-9-dev问题 [<strong>好像没有搞这个</strong>]这个时候并没有解决依赖问题，于是将libgcc-9-dev卸载（漫长等待）</h3><p><code>apt remove libgcc-9-dev</code></p>
<p>再重新安装依赖（漫长等待）</p>
<h3 id="这是干啥？"><a href="#这是干啥？" class="headerlink" title="这是干啥？"></a>这是干啥？</h3><p>这个时候就能愉快地安装pyenv了（漫长等待）</p>
<p><code>curl https://pyenv.run | bash</code></p>
<h3 id="zsh配置最后增加下面"><a href="#zsh配置最后增加下面" class="headerlink" title="zsh配置最后增加下面"></a>zsh配置最后增加下面</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export PYENV_ROOT=&quot;$HOME/.pyenv&quot;</span><br><span class="line">export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;    # if `pyenv` is not already on PATH</span><br><span class="line">eval &quot;$(pyenv init --path)&quot;</span><br><span class="line">eval &quot;$(pyenv init -)&quot;</span><br></pre></td></tr></table></figure>

<h2 id="openssl依赖问题"><a href="#openssl依赖问题" class="headerlink" title="openssl依赖问题"></a><a href="https://www.hefuni.com/error-the-python-ssl-extension-was-not-compiled-missing-the-openssl-lib/">openssl依赖问题</a></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget http://www.openssl.org/source/openssl-1.0.2j.tar.gz\</span><br><span class="line">tar -xzf openssl-1.0.2j.tar.gz\</span><br><span class="line">cd openssl-1.0.2j\</span><br><span class="line">./config shared zlib\</span><br><span class="line">./config -t\</span><br><span class="line">make\</span><br><span class="line">make install\</span><br><span class="line">cd /usr/local/ssl/lib\</span><br><span class="line">ldconfig -v</span><br><span class="line">source ~/.bashrc</span><br><span class="line">vi ~/.bashrc</span><br><span class="line">source ~/.zshrc</span><br><span class="line">vi ~/.zshrc</span><br><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure>

<h3 id="好像还有头文件依赖问题，加入zsh配置"><a href="#好像还有头文件依赖问题，加入zsh配置" class="headerlink" title="好像还有头文件依赖问题，加入zsh配置"></a>好像还有头文件依赖问题，加入zsh配置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#LD_RUN_PATH=&quot;/usr/local/ssl/lib&quot; \ </span><br><span class="line">#LDFLAGS=&quot;-L/usr/local/ssl/lib&quot; \</span><br><span class="line">CPPFLAGS=&quot;-I~/openssl-1.0.2j/include&quot; </span><br><span class="line">CFLAGS=&quot;-I~/openssl-1.0.2j/include&quot; </span><br><span class="line">CONFIGURE_OPTS=&quot;--with-openssl=~/openssl-1.0.2j/&quot;</span><br></pre></td></tr></table></figure>

<h2 id="proxychains"><a href="#proxychains" class="headerlink" title="proxychains"></a>proxychains</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install proxychains</span><br></pre></td></tr></table></figure>
<p>配置proxychains<br>使用vim，nano,后者gedit打开配置文件：</p>
<p><code>gedit /etc/proxychains.conf</code></p>
<p>将打开的文件内最下面有一行socks4 127.0.0.1 9050，把这一行注释掉，添加一行socks5 127.0.0.1 1080和https 127.0.0.1 8080。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ProxyList]</span><br><span class="line"># add proxy here ...</span><br><span class="line"># meanwile</span><br><span class="line"># defaults set to &quot;tor&quot;</span><br><span class="line">socks5  127.0.0.1 1080</span><br><span class="line">https   127.0.0.1 8080</span><br></pre></td></tr></table></figure>

<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="没有apt-add-repository命令"><a href="#没有apt-add-repository命令" class="headerlink" title="没有apt-add-repository命令"></a>没有apt-add-repository命令</h3><p><a href="https://phoenixnap.com/kb/add-apt-repository-command-not-found-ubuntu"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install software-properties-common</span><br><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>melody音乐自由</title>
    <url>/2022/05/11/melody%E9%9F%B3%E4%B9%90%E8%87%AA%E7%94%B1/</url>
    <content><![CDATA[<p><a href="https://github.com/foamzou/melody">melody</a></p>
<h2 id="window"><a href="#window" class="headerlink" title="window"></a>window</h2><p><code>copy backend/.profile/accounts.sample.json backend/.profile/accounts.json</code><br><code>dir C:\Users\N25476\melody/backend/.profile/accounts.json</code><br><code>notepad C:\Users\N25476\melody/backend/.profile/accounts.json</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Melody Key，建议随机生成 UUID&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;loginType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;固定为：phone，目前仅支持手机号+密码登录。下面为示例&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;account&quot;</span><span class="punctuation">:</span> <span class="string">&quot;填写手机号&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;填写密码&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;platform&quot;</span><span class="punctuation">:</span> <span class="string">&quot;固定为：wy，目前仅支持网易云。&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;340a3857f2db4b9cb4812b9974714c18&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;loginType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;phone&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;account&quot;</span><span class="punctuation">:</span> <span class="string">&quot;phonenumber&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yourpassowrd&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;platform&quot;</span><span class="punctuation">:</span> <span class="string">&quot;wy&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;340a3857f2db4b9cb4812b9974714c18&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p><code>C:\Users\N25476\melody&gt;node backend/src/index.js</code></p>
<h2 id="kali"><a href="#kali" class="headerlink" title="kali"></a>kali</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">sudo apt-get install ffmpeg</span><br><span class="line">npm run init</span><br><span class="line">npm run app</span><br></pre></td></tr></table></figure>


<h2 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h2><p><a href="https://radixweb.com/blog/installing-npm-and-nodejs-on-windows-and-mac">安装npm</a><br>brew安装ffmpeg(需要翻墙)，或者<a href="https://blog.csdn.net/weixin_43963725/article/details/113592856">自己</a>下载</p>
<p><code>brew install ffmpeg</code></p>
<p>后面操作同kali</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~/Desktop/OpenSource/melody</span><br><span class="line">npm run app</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>python</title>
    <url>/2022/05/03/python/</url>
    <content><![CDATA[<p><a href="https://tendcode.com/tool/regex/">正则表达式测试</a></p>
]]></content>
  </entry>
  <entry>
    <title>scrcpy异常</title>
    <url>/2022/06/07/scrcpy%E5%BC%82%E5%B8%B8/</url>
    <content><![CDATA[<p>Linux系统scrcpy报 “ERROR: “adb push” returned with value 1 #185”</p>
<p><code>chcon -R u:object_r:shell_data_file:s0 /data/local/tmp</code></p>
]]></content>
  </entry>
  <entry>
    <title>virtualbox6.1.32安装win10</title>
    <url>/2022/06/22/virtualbox6-1-32%E5%AE%89%E8%A3%85win10/</url>
    <content><![CDATA[<p>使用msdnitellyou上的官网原始版本安装(cn_windows_10_business_editions_version_1803_updated_sept_2019_x64_dvd_91248a41.iso)</p>
<p><img src="/images/pasted-4.png" alt="upload successful"></p>
<p><a href="https://www.youtube.com/watch?v=fN_DxEMxiJI">解决安装向导内用户名无法输入</a><br><code>shlft+f10</code>快捷键进入cmd，输入下列命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user Administrator /active:yes</span><br><span class="line">net user /add kampusbiner 1234567890</span><br><span class="line">net localgroup administrators kampusbiner /add</span><br><span class="line">cd %windir%\system32\oobe</span><br><span class="line">msoobe.exe</span><br></pre></td></tr></table></figure>
<p>完成后重启，会提示用户名密码无效，并再一次进入向导，此时键盘可用了</p>
<p>激活</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">slmgr /ipk NW6C2-QMPVW-D7KKK-3GKT6-VCFB2</span><br><span class="line">slmgr /skms kms.03k.org</span><br><span class="line">slmgr /ato</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Android逆向常用命令</title>
    <url>/2022/04/27/what-the-fuck/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h3 id="logcat"><a href="#logcat" class="headerlink" title="logcat"></a>logcat</h3><p><a href="https://blog.csdn.net/qq_34801506/article/details/81014994">adb logcat 的妙用（输出 log 到指定文件中）</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb logcat -c  </span><br><span class="line">adb logcat -s whatyouwant </span><br></pre></td></tr></table></figure>

<h3 id="查看屏幕分辨率-DPI"><a href="#查看屏幕分辨率-DPI" class="headerlink" title="查看屏幕分辨率+DPI"></a>查看屏幕分辨率+DPI</h3><p>分辨率 <code>adb shell wm size</code><br>DPI <code>adb sehll wm density</code></p>
<h3 id="查看进程占用端口号"><a href="#查看进程占用端口号" class="headerlink" title="查看进程占用端口号"></a>查看进程占用端口号</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tasklist | findstr &quot;haha&quot;</span><br><span class="line">netstat -ano | findstr 27640</span><br></pre></td></tr></table></figure>

<h3 id="idc-dump脚本"><a href="#idc-dump脚本" class="headerlink" title="idc dump脚本"></a>idc dump脚本</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">auto</span> fp, start, end, size;</span><br><span class="line">start = <span class="number">0x5826752000</span>;</span><br><span class="line">end = <span class="number">0x5826796000</span>;</span><br><span class="line">fp = fopen(<span class="string">&quot;/Users/master/Desktop/dump.so&quot;</span>, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> ( ; start &lt; end; start++ )</span><br><span class="line">fputc(Byte(start), fp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="frida-ps过滤"><a href="#frida-ps过滤" class="headerlink" title="frida-ps过滤"></a>frida-ps过滤</h3><h4 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">frida -U | find /i &quot;xxx&quot;</span><br></pre></td></tr></table></figure>


<h3 id="查找目录下的文件名"><a href="#查找目录下的文件名" class="headerlink" title="查找目录下的文件名"></a>查找目录下的文件名</h3><h4 id="windows-1"><a href="#windows-1" class="headerlink" title="windows"></a>windows</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Get-ChildItem -Path . -Recurse  -Name *Script*</span><br></pre></td></tr></table></figure>

<h4 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find . -iname &quot;xxx&quot;</span><br></pre></td></tr></table></figure>

<h3 id="查找文件内的字符串"><a href="#查找文件内的字符串" class="headerlink" title="查找文件内的字符串"></a>查找文件内的字符串</h3><h4 id="windows-2"><a href="#windows-2" class="headerlink" title="windows"></a>windows</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">findstr /s /i /m &quot;com.androlua.Main&quot; *</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><blockquote>
<p><a href="https://blog.51cto.com/u_3550334/787812">grep命令技巧</a><br>grep -C 显示目标前后几行<br>grep -B 显示目标前几行<br>grep -A 显示目标后几行<br>grep -n 显示行号  </p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grep -irl &quot;getRuntime&quot; com.nb.xiaobawang</span><br><span class="line">cat /proc/12791/maps | grep -i -C 10 &quot;libgsl.so&quot;</span><br></pre></td></tr></table></figure>

<h3 id="frida"><a href="#frida" class="headerlink" title="frida"></a>frida</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/data/local/tmp/fs15117 -l 0.0.0.0:8888 -v</span><br><span class="line">frida -H 127.0.0.1:8888 -p 6991 -l .\nasa.js -o guci042202.log</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@(frida-ps -H 127.0.0.1:8888) -like &quot;*what*&quot;</span><br><span class="line">@(frida-ps -U) -like &quot;*what*&quot;</span><br></pre></td></tr></table></figure>

<h3 id="获取当前activity"><a href="#获取当前activity" class="headerlink" title="获取当前activity"></a>获取当前activity</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb shell dumpsys window w | grep name=&quot;&quot;</span><br><span class="line">adb shell dumpsys activity | grep &quot;mFocusedActivity&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="安装包操作"><a href="#安装包操作" class="headerlink" title="安装包操作"></a>安装包操作</h3><blockquote>
<p><a href="https://blog.csdn.net/qq_37858386/article/details/103142590">https://blog.csdn.net/qq_37858386/article/details/103142590</a></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打印所有三方包</span></span><br><span class="line">adb shell pm list packages -3</span><br><span class="line"><span class="comment"># 打印apk包位置</span></span><br><span class="line">adb shell pm list packages path xxx</span><br><span class="line">adb uninstall com.xiao.mao</span><br></pre></td></tr></table></figure>


<h3 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h3><p><a href="https://www.androidtcpdump.com/android-tcpdump/downloads">tcpdump android</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 r0capture.py -U com.qiyi.video -v -p iqiyi.pcap</span><br><span class="line">./tcpdump -i any -p -s 0 -w /sdcard/capture.pcap</span><br></pre></td></tr></table></figure>
<h4 id="wireshark"><a href="#wireshark" class="headerlink" title="wireshark"></a>wireshark</h4><h5 id="导入密钥"><a href="#导入密钥" class="headerlink" title="导入密钥"></a>导入密钥</h5><p>编辑-&gt;首选项-&gt;protocols-&gt;TCL-&gt;(Pre)-Master-Secret log filename</p>
<h5 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h5><p>(http.request or tls.handshake.type eq 1) and !(ssdp)</p>
]]></content>
  </entry>
  <entry>
    <title>windows平台软件配置</title>
    <url>/2022/05/13/windows%E5%B9%B3%E5%8F%B0%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="CLion-cygwin配置编译链"><a href="#CLion-cygwin配置编译链" class="headerlink" title="CLion + cygwin配置编译链"></a><a href="https://www.jetbrains.com/help/clion/quick-tutorial-on-configuring-clion-on-windows.html#WSL">CLion + cygwin配置编译链</a></h2><p>不用手动安装cmake、gcc、g++</p>
<p>Environment选择cygwin64的目录，cmake选Bundled<br>make 、c compiler\c++compiler自动识别，debuger使用cygwin gdb<br><img src="/images/pasted-0.png" alt="upload successful"></p>
]]></content>
  </entry>
  <entry>
    <title>另一种frida脚本执行方式</title>
    <url>/2022/04/28/%E5%8F%A6%E4%B8%80%E7%A7%8Dfrida%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8C%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<blockquote>
<p>引用声明<br><a href="https://blog.csdn.net/caiqiiqi/article/details/107013963">JEB配合frida进行hook操作</a></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hook-frida.py</span></span><br><span class="line"><span class="keyword">import</span> frida, sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">on_message</span>(<span class="params">message, data</span>):</span><br><span class="line">    <span class="keyword">if</span> message[<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;send&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[*] &#123;0&#125;&quot;</span>.<span class="built_in">format</span>(message[<span class="string">&#x27;payload&#x27;</span>]))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(message)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">jscode = <span class="string">&quot;&quot;&quot;Java.perform(function(args1, args2)&#123;</span></span><br><span class="line"><span class="string">var vHttpUriBuilder = Java.use(&quot;com.cqq.example.HttpTask$HttpUriBuilder&quot;)</span></span><br><span class="line"><span class="string">    .getSign</span></span><br><span class="line"><span class="string">    .overload()</span></span><br><span class="line"><span class="string">    .implementation = function () &#123; // for javascript</span></span><br><span class="line"><span class="string">        var ret = this.getSign();</span></span><br><span class="line"><span class="string">        console.log(ret)</span></span><br><span class="line"><span class="string">        console.log(args1)</span></span><br><span class="line"><span class="string">        console.log(args2)</span></span><br><span class="line"><span class="string">        return ret;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># get_remote_devicen拿到session对象，然后attach包名</span></span><br><span class="line"><span class="string">process = frida.get_remote_device().attach(&#x27;com.example.cqq&#x27;)</span></span><br><span class="line"><span class="string">script = process.create_script(jscode)</span></span><br><span class="line"><span class="string">script.on(&#x27;message&#x27;, on_message)</span></span><br><span class="line"><span class="string">print(&#x27;[*] Running script&#x27;)</span></span><br><span class="line"><span class="string">script.load()</span></span><br><span class="line"><span class="string">sys.stdin.read()</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>好用的网站</title>
    <url>/2022/06/09/%E5%A5%BD%E7%94%A8%E7%9A%84%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<p><a href="https://gchq.github.io/CyberChef/">CyberChef算法</a></p>
]]></content>
  </entry>
  <entry>
    <title>学习资料</title>
    <url>/2022/06/14/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</url>
    <content><![CDATA[<p><a href="https://www.freebuf.com/articles/game/266710.html">揭秘手游外挂之基于内存蜜罐的内存修改挂分析技术</a></p>
<p><a href="https://helpdoc.touchsprite.com/">触动精灵开发文档</a><br><a href="https://space.bilibili.com/391767488">北京帮你玩科技bilibili</a><br><a href="http://www.lua.org/manual/5.2/">lua5.2官方文档</a><br><a href="https://www.runoob.com/lua/lua-tutorial.html">Lua教材</a></p>
<p>lua anti<br><a href="https://www.youtube.com/watch?v=c0rj876YvSY">Tutorial how to make GG Bypass Big log part 3: Bypass gg.addListItem - the legend antilog</a>  </p>
]]></content>
  </entry>
  <entry>
    <title>frida版本相关</title>
    <url>/2022/04/29/%E5%B8%B8%E7%94%A8frida%E7%89%88%E6%9C%AC/</url>
    <content><![CDATA[<h1 id="版本关联"><a href="#版本关联" class="headerlink" title="版本关联"></a>版本关联</h1><h2 id="12-8-0"><a href="#12-8-0" class="headerlink" title="12.8.0"></a>12.8.0</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install frida==12.8.0</span><br><span class="line">pip install frida-tools==7.2.1</span><br><span class="line">pip install objection==1.9.4</span><br></pre></td></tr></table></figure>

<h2 id="14-2-17"><a href="#14-2-17" class="headerlink" title="14.2.17"></a>14.2.17</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install frida==14.2.17</span><br><span class="line">pip install frida-tools==9.2.4</span><br><span class="line">pip install objection==1.10.1</span><br></pre></td></tr></table></figure>

<h2 id="15-1-22"><a href="#15-1-22" class="headerlink" title="15.1.22"></a>15.1.22</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install frida==15.1.22</span><br><span class="line">pip install frida-tools==10.6.1</span><br><span class="line">pip install objection==1.10.1</span><br></pre></td></tr></table></figure>

<h1 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看可用python版本</span><br><span class="line">pyenv install -l </span><br><span class="line">#删除python版本</span><br><span class="line">pyenv uninstall 3.10.4</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="15-x版本objection"><a href="#15-x版本objection" class="headerlink" title="15.x版本objection"></a>15.x版本objection</h2><h3 id="sqlite3模块找不到"><a href="#sqlite3模块找不到" class="headerlink" title="_sqlite3模块找不到"></a>_sqlite3模块找不到</h3><blockquote>
<p><a href="https://installati.one/ubuntu/20.04/libsqlite3-dev/">How To Install libsqlite3-dev on Ubuntu 20.04</a></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y install libsqlite3-dev</span><br><span class="line"># 完事后pyenv重新安装对应的python版本，此处用的3.10.4</span><br><span class="line">pyenv uninstall 3.10.4</span><br></pre></td></tr></table></figure>

<h3 id="lzma模块找不到"><a href="#lzma模块找不到" class="headerlink" title="_lzma模块找不到"></a>_lzma模块找不到</h3><blockquote>
<p><a href="https://www.jianshu.com/p/c5d0bb6cf0eb">No module named ‘_lzma’</a></p>
</blockquote>
<h4 id="安装lzma模块"><a href="#安装lzma模块" class="headerlink" title="安装lzma模块"></a>安装lzma模块</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install liblzma-dev</span><br><span class="line">pip install backports.lzma</span><br><span class="line"># python3.6+换成这个</span><br><span class="line">pip3 install backports.lzma</span><br></pre></td></tr></table></figure>
<h4 id="根据错误修改lzma-py对应的文件"><a href="#根据错误修改lzma-py对应的文件" class="headerlink" title="根据错误修改lzma.py对应的文件"></a>根据错误修改lzma.py对应的文件</h4><p>这里报错文件位置是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">File &quot;/home/kali/.pyenv/versions/3.10.4/lib/python3.10/lzma.py&quot;, line 27, in &lt;module&gt;</span><br><span class="line">  from _lzma import *</span><br></pre></td></tr></table></figure>
<p>将对应”from _lzma import *”替换为下列内容保存后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">try:</span><br><span class="line">    from _lzma import *</span><br><span class="line">    from _lzma import _encode_filter_properties, _decode_filter_properties</span><br><span class="line">except ImportError:</span><br><span class="line">    from backports.lzma import *</span><br><span class="line">    from backports.lzma import _encode_filter_properties, _decode_filter_properties</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://www.cnblogs.com/wangmo/p/12040220.html">使用 pyenv 管理 Python 版本</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>常用模拟器adb端口</title>
    <url>/2022/06/15/%E5%B8%B8%E7%94%A8%E6%A8%A1%E6%8B%9F%E5%99%A8adb%E7%AB%AF%E5%8F%A3/</url>
    <content><![CDATA[<p>mumu<br><code>adb connect 127.0.0.1:7555</code></p>
]]></content>
  </entry>
  <entry>
    <title>手机环境配置</title>
    <url>/2022/05/13/%E6%89%8B%E6%9C%BA%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="pixel-xl"><a href="#pixel-xl" class="headerlink" title="pixel xl"></a>pixel xl</h2><blockquote>
<p><a href="https://androidmtk.com/download-android-sdk-platform-tools">Download Android SDK Platform Tools (all versions)</a></p>
</blockquote>
<h3 id="android10以前刷magisk"><a href="#android10以前刷magisk" class="headerlink" title="android10以前刷magisk"></a>android10以前刷magisk</h3><blockquote>
<p><a href="https://developers.google.com/android/images#marlin">9.0.0 (PQ3A.190801.002, Aug 2019)  </a><br><a href="https://github.com/topjohnwu/Magisk/releases">Magisk v21.3</a><br>ps:10.x magisk刷不进去,需要通过magisk高版本patch boot.img的方式刷入</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">adb reboot bootloader</span><br><span class="line">fastboot boot /Users/master/Downloads/Compressed/twrp-3.3.1-3-marlin.img</span><br><span class="line">adb push /Users/master/Downloads/Compressed/Magisk-v21.3.zip /sdcard/Download/</span><br></pre></td></tr></table></figure>

<h3 id="android10刷magsik"><a href="#android10刷magsik" class="headerlink" title="android10刷magsik"></a>android10刷magsik</h3><p>安装Magisk-v24.2，app首页选择boot.img进行patch</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fastboot flash boot magisk_patched.img</span><br><span class="line">fasbtoo reboot</span><br></pre></td></tr></table></figure>

<h3 id="已连接，但无法访问互联网"><a href="#已连接，但无法访问互联网" class="headerlink" title="已连接，但无法访问互联网"></a>已连接，但无法访问互联网</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">settings put global captive_portal_http-url https://www.google.cn/generate_204</span><br><span class="line">settings put global captive_portal_https-url https://www.google.cn/generate_204</span><br><span class="line">settings put global ntp_server 1.hk.pool.ntp.org</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>群晖 ssh公钥 are too open错误</title>
    <url>/2022/06/12/%E7%BE%A4%E6%99%96-ssh%E5%85%AC%E9%92%A5-are-too-open%E9%94%99%E8%AF%AF/</url>
    <content><![CDATA[<p>在群晖通过git备份出现 ssh公钥文件权限问题，提示.ssh&#x2F;xxx are too open问题</p>
<p>确保.ssh文件夹及对应的公私钥权限为755和600</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo chmod -R 755 ~/.ssh</span><br><span class="line">sudo chmod -R 600 ~/.ssh/xxx.pub</span><br><span class="line">sudo chmod -R 600 ~/.ssh/xxx</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>群晖端口占用查看</title>
    <url>/2022/08/02/%E7%BE%A4%E6%99%96%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E6%9F%A5%E7%9C%8B/</url>
    <content><![CDATA[<p><a href="https://icode.best/i/27110245331619">群晖修改默认5000、5001端口为80、443-爱代码爱编程</a>  </p>
<p>一、 释放80、443端口占用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#ssh登陆nas</span><br><span class="line">sudo -i #切换至root用户</span><br><span class="line">#检查端口占用情况</span><br><span class="line">netstat -anp |grep 80</span><br><span class="line">netstat -anp |grep 443</span><br><span class="line">#能确定端口被nginx占用</span><br><span class="line"></span><br><span class="line">cd /usr/syno/share/nginx</span><br><span class="line">#文件备份</span><br><span class="line">cp server.mustache server.mustache_`date +%Y%m%d`</span><br><span class="line">cp DSM.mustache DSM.mustache_`date +%Y%m%d`</span><br><span class="line">cp WWWService.mustache WWWService.mustache_`date +%Y%m%d`</span><br><span class="line"></span><br><span class="line">#其中的8080、8443自行调整</span><br><span class="line">sed -i &quot;s/80/8080/g&quot; server.mustache</span><br><span class="line">sed -i &quot;s/80/8080/g&quot; DSM.mustache</span><br><span class="line">sed -i &quot;s/80/8080/g&quot; WWWService.mustache</span><br><span class="line"></span><br><span class="line">sed -i &quot;s/443/8443/g&quot; server.mustache</span><br><span class="line">sed -i &quot;s/443/8443/g&quot; DSM.mustache</span><br><span class="line">sed -i &quot;s/443/8443/g&quot; WWWService.mustache</span><br><span class="line"></span><br><span class="line">#重启nginx</span><br><span class="line">/usr/bin/nginx -s stop</span><br><span class="line">#等待两分钟nginx会自行启动，检查nginx服务</span><br><span class="line">ps -ef|grep nginx</span><br><span class="line"></span><br><span class="line">#检查端口占用情况</span><br><span class="line">netstat -anp |grep 80</span><br><span class="line">netstat -anp |grep 443</span><br></pre></td></tr></table></figure>

<p>二、修改默认端口</p>
<blockquote>
<p>回到DSM页面 “控制面板” - “登陆门户” - “DSM” - “网页服务”<br>DSM的http和https依旧无法调整</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#ssh登陆nas</span><br><span class="line">sudo -i #切换至root用户</span><br><span class="line"></span><br><span class="line">cd /usr/syno/etc/www</span><br><span class="line">#文件备份</span><br><span class="line">cp DSM.json DSM.json_`date +%Y%m%d`</span><br><span class="line"></span><br><span class="line">### ---以下内容调整的是DSM等登陆页端口---</span><br><span class="line">### ---如需调整反向代理的端口，请修改ReverseProxy.json文件---</span><br><span class="line"></span><br><span class="line">#sed调整或者vi修改</span><br><span class="line">sed -i &quot;s/5000/80/g&quot; DSM.json</span><br><span class="line">sed -i &quot;s/5001/443/g&quot; DSM.json</span><br><span class="line"></span><br><span class="line">#重启nginx</span><br><span class="line">/usr/bin/nginx -s stop</span><br><span class="line">#等待两分钟nginx会自行启动，检查nginx服务</span><br><span class="line">ps -ef|grep nginx</span><br></pre></td></tr></table></figure>

<p>三、登陆DSM页面验证</p>
<blockquote>
<p>端口已调整，注意登陆的地址 例： <a href="https://192.168.0.10/">https://192.168.0.10</a> 不用在后面跟端口号<br>美中不足的是DSM页面 “控制面板” - “登陆门户” - “DSM” - “网页服务”<br>打开默认红框框，无法手动调整该页面的其他内容</p>
</blockquote>
<p><img src="/images/pasted-7.png" alt="upload successful"></p>
]]></content>
  </entry>
  <entry>
    <title>软件使用技巧</title>
    <url>/2022/05/12/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h2 id="sublime中去除重复行"><a href="#sublime中去除重复行" class="headerlink" title="sublime中去除重复行"></a>sublime中去除重复行</h2><p>步骤如下：<br>首先排序，edit - sort lines<br>ctrl H, 查找目标为^(.+)$[\r\n](^\1$[\r\n]{0, 1})+<br>替换为 \1\n</p>
]]></content>
  </entry>
</search>
